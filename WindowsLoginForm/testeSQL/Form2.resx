<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLogin.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        bYNbYNaGMprY/wAb/wD/2Q==
</value>
  </data>
</root>